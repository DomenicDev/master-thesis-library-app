/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package de.cassisi.catalogue.app

import com.eventstore.dbclient.EventStoreDBClient
import com.eventstore.dbclient.EventStoreDBConnectionString
import de.cassisi.catalogue.book.*
import de.cassisi.catalogue.campus.CampusId
import de.cassisi.catalogue.metadata.MetadataId
import java.util.*


fun main() {
    println("Hello World!")

    val settings = EventStoreDBConnectionString.parse("esdb://127.0.0.1:2113?tls=false&keepAliveTimeout=10000&keepAliveInterval=10000")
    val client = EventStoreDBClient.create(settings)

    // infrastructure
    val bookEventStoreRepository = BookEventStoreRepository(client)

    // command handler
    val bookCommandHandler = BookCommandHandler(bookEventStoreRepository)

    // create
    val bookId = UUID.randomUUID()
    val createCommand = BookCommand.AddBook(
        BookId(bookId),
        MetadataId(UUID.randomUUID()),
        CampusId(UUID.randomUUID()),
        Signature("FUWA-1234")
    )
    bookCommandHandler.handle(createCommand)

    // update
    val updateCommand = BookCommand.UpdateBookSignature(
        BookId(bookId),
        Signature("FUWA-12345")
    )
    bookCommandHandler.handle(updateCommand)


    val aggregate = bookEventStoreRepository.loadAggregateById(BookId(bookId))
    println(aggregate.getId())
    println(aggregate.getCampusId())
    println(aggregate.getMetadataId())
    println(aggregate.getSignature())

}
